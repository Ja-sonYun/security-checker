name: 'Run Security Checker'
description: 'Check for vulnerabilities and license issues in your project dependencies'
author: 'Ja-sonYun'

inputs:
  args:
    description: 'Additional arguments to pass to security-checker'
    required: true
  llm_api_key:
    description: 'API key for LLM service to use with security-checker'
    required: false
    default: ''
  llm_endpoint:
    description: 'Endpoint for LLM service to use with security-checker'
    required: false
    default: ''
  llm_summarize_model:
    description: 'Model to use for summarization in LLM service'
    required: false
    default: 'o4-mini'
  slack_token:
    description: 'Slack token for sending notifications'
    required: false
    default: ''
  slack_channel_id:
    description: 'Slack channel ID for sending notifications'
    required: false
    default: ''


runs:
  using: 'composite'
  steps:
    - uses: actions/setup-python@v5
      with:
        python-version: 3.10
        check-latest: true

    - name: Install security-checker in isolated env
      shell: bash
      run: |
        python -m pip install -U pip pipx
        pipx install --python "$(which python)" security-checker

    - name: Run security-checker
      shell: bash
      env:
        LLM_API_KEY: ${{ inputs.llm_api_key }}
        LLM_ENDPOINT: ${{ inputs.llm_endpoint }}
        LLM_SUMMARIZE_MODEL: ${{ inputs.llm_summarize_model }}
        SLACK_TOKEN: ${{ inputs.slack_token }}
        SLACK_CHANNEL_ID: ${{ inputs.slack_channel_id }}
      run: |
        pipx run security-checker ${{ inputs.args }}
